input {
    gelf {
    	port => "12201"
    	tags => ["%{[tag]}"]
    }
}


filter {
    if ![ecs] {
        mutate {
            rename => ["host", "[host][name]" ]
        }
    }

    # NGINX Config
    if "nginx" in [tags] {
        json {
            source => "message"
            remove_field => "message"
        }
        useragent {
            source => "agent"
            target => "user_agent"
            remove_field => "agent"
        }
        if ([time]) {
            mutate {
                rename => { "@timestamp" => "read_timestamp" }
            }
            date {
                match => [ "time", "dd/MMM/yyyy:H:m:s Z" ]
                remove_field => "time"
            }
        }
    }

    # UGC
    if "ugc" in [tags] {
        #grok {
        #    match => {"message" => "%{TIMESTAMP_ISO8601:time} - (?<service_name>[\w_\d\.]+) - %{WORD:log_level} - X-Request-Id: (?<request-id>[\w\d]+): (?<event>.+)" }
        #    remove_field => "message"
        #}
        csv {
            separator => " - "
            columns => ["time", "service_name", "log_level", "request-id", "event"]
            remove_field => "message"
        }
        if ([time]) {
            mutate {
                rename => { "@timestamp" => "read_timestamp" }
            }
            date {
                match => [ "time", "ISO8601" ]
                remove_field => "time"
            }
        }
    }

    if "etl" in [tags] {
        csv {
            separator => " - "
            columns => ["time", "log_level", "event_type", "service_name", "event"]
            remove_field => "message"
        }
        if ([time]) {
            mutate {
                rename => { "@timestamp" => "read_timestamp" }
            }
            date {
                match => [ "time", "ISO8601" ]
                remove_field => "time"
            }
        }
    }

    if "auth" in [tags] {
        csv {
            separator => " - "
            columns => ["time", "log_level", "event_type", "service_name", "request-id", "event"]
            remove_field => "message"
        }
        if ([time]) {
            mutate {
                rename => { "@timestamp" => "read_timestamp" }
            }
            date {
                match => [ "time", "ISO8601" ]
                remove_field => "time"
            }
        }
    }
}


output {
#     stdout {
#     }
    if "nginx" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "nginx-%{+YYYY.MM}"
        }
    }
    else if "ugc" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "ugc-%{+YYYY.MM}"
        }
    }
    else if "etl" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "etl-%{+YYYY.MM}"
        }
    }
    else if "zookeeper" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "zookeeper-%{+YYYY.MM}"
        }
    }
    else if "clickhouse" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "clickhouse-%{+YYYY.MM}"
        }
    }
    else if "kafka" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "kafka-%{+YYYY.MM}"
        }
    }
    else if "auth" in [tags] {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "auth-%{+YYYY.MM}"
        }
    }
    else {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "logstash-%{+YYYY.MM}"
        }
    }
}
